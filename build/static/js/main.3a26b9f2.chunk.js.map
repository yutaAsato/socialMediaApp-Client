{"version":3,"sources":["assets/svg/color.svg","assets/svg/black.svg","assets/svg/virus.svg","contextAPI/userContext.js","components/LikeButton.js","components/Comments.js","components/DeleteButton.js","components/Tweets.js","components/HomeTweets.js","components/FollowButton.js","components/Relevant.js","components/whoToFollowFollowButton.js","components/WhoToFollow.js","components/SideBar.js","components/HomePostTweet.js","components/Home.js","components/Login.js","components/TweetDetails.js","components/PostTweet.js","components/NotificationsButton.js","components/Navigations.js","components/EditProfile.js","components/UserProfile.js","components/Register.js","components/NavigationBottom.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","dataReducer","state","action","type","loggedUser","username","payload","user","email","userId","user_id","joined","created_at","bio","website","location","notifications","tweets","userTweets","auth","likes","relationships","url","relevantUser","relevantRelationships","relevantComments","relevantUserImage","whoToFollow","Error","UserProvider","props","useReducer","profilePic","dispatch","value","useMemo","Provider","LikeButton","postId","useContext","postNotification","a","axios","post","sender","recipient","tweetId","console","log","postData","window","pathname","tweetUsername","map","data","tweetid","find","x","likedPost","Tooltip","title","onClick","fetchData","IconButton","useStyles","makeStyles","theme","dialogContainer","width","Comments","classes","dayjs","extend","relativeTime","useState","open","setOpen","reply","setReply","currentTweetId","currentTweetUsername","handleClose","filteredTweets","markup","Date","now","filter","id","parseInt","length","Card","className","root","CardHeader","avatar","Avatar","src","style","objectFit","subheader","fromNow","CardContent","Typography","variant","color","component","content","CardActions","disableSpacing","aria-label","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","placeholder","onChange","e","target","DialogActions","Button","comment","postReply","DeleteButton","history","useHistory","deletePost","push","backgroundColor","palette","background","paper","inline","display","padding","paddingLeft","paddingBottom","Tweets","orderedTweets","tweetsMarkup","sort","b","dateA","tweet","key","to","textDecoration","marginRight","Fragment","Container","justifyContent","marginLeft","Box","likescount","commentcount","Divider","HomeTweets","loading","setLoading","useEffect","result","paddingTop","FollowButton","followButton","followed_username","followUser","toUnfollowUsername","alt","require","toFollowUsername","height","listItemStyle","Relevant","relevantUsername","List","fontWeight","ListItem","alignItems","paddingRight","ListItemText","secondary","WtfFollowButton","mainCard","WhoToFollow","idx","ListItemAvatar","SideBar","get","primary","main","textField","marginTop","spacing","postButton","breakpoints","down","marginBottom","fontSize","HomePostTweet","setTweet","postTweet","flexGrow","textAlign","text","Home","light","Copyright","align","getFullYear","flexDirection","form","submit","customError","LogIn","setEmail","password","setPassword","errors","general","setErrors","localStorage","jwt","CssBaseline","onSubmit","preventDefault","token","setItem","response","loginUser","noValidate","required","label","name","autoComplete","error","helperText","Grid","container","FormControlLabel","control","Checkbox","item","mt","media","expand","transform","transition","transitions","create","duration","shortest","expandOpen","red","TweetDetails","expanded","setExpanded","match","params","commentMarkup","clsx","aria-expanded","senderusername","comments","PostTweet","useTheme","isSmallScreen","useMediaQuery","buttonProps","size","startIcon","urlUser","drawer","overflowY","overflowX","listItems","NotificationsButton","notificationIcon","anchorEl","setAnchorEl","not","read","Badge","badgeContent","notificationsMarkup","verb","icon","time","iconColor","MenuItem","Link","button","ListItemIcon","aria-owns","undefined","aria-haspopup","event","Hidden","mdDown","Menu","Boolean","onEntered","unreadNotificationsId","unreadNotificationId","Navigations","removeItem","defaults","headers","common","NavProfile","toolbar","editProfile","EditProfile","setBio","setWebsite","setLocation","hidden","image","files","formData","FormData","append","uploadImage","placement","document","getElementById","click","defaultValue","fetchRelevant","UserProfile","editDetailsButton","followers","following","CardActionArea","CardMedia","gutterBottom","format","href","Register","confirmPassword","setConfirmPassword","setUsername","registerUser","NavigationBottom","setValue","BottomNavigation","newValue","showLabels","m","BottomNavigationAction","App","up","xsDown","xs","sm","md","lg","ProtectedRoute","exact","path","smDown","smUp","Component","rest","render","from","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3a26b9f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color.d8e226a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/black.453b122a.svg\";","module.exports = __webpack_public_path__ + \"static/media/virus.1296f68d.svg\";","import React from \"react\";\n// import { render } from \"@testing-library/react\";\n\n//create context\nconst initialState = {};\nexport const UserContext = React.createContext(initialState);\n\n//reducer\nfunction dataReducer(state, action) {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        loggedUser: {\n          username: action.payload.user.username,\n          email: action.payload.user.email,\n          userId: action.payload.user.user_id,\n          joined: action.payload.user.created_at,\n          bio: action.payload.user.bio,\n          website: action.payload.user.website,\n          location: action.payload.user.location,\n          notifications: [...action.payload.notifications],\n        },\n      };\n    case \"SET_TWEETS\":\n      return {\n        ...state,\n        tweets: [...action.payload],\n      };\n    case \"SET_USER_TWEETS\":\n      return {\n        ...state,\n        userTweets: [...action.payload],\n      };\n    case \"SET_AUTH\":\n      return {\n        ...state,\n        auth: action.payload,\n      };\n    case \"SET_LIKES\":\n      return {\n        ...state,\n        likes: [...action.payload],\n      };\n    case \"SET_RELATIONSHIPS\":\n      return {\n        ...state,\n        relationships: [...action.payload],\n      };\n    case \"URL_DATA\":\n      return {\n        ...state,\n        url: [action.payload],\n      };\n    case \"SET_RELEVANT_USER\":\n      return {\n        ...state,\n        relevantUser: [action.payload],\n      };\n    case \"SET_RELEVANT_RELATIONSHIPS\":\n      return {\n        ...state,\n        relevantRelationships: [...action.payload],\n      };\n    case \"SET_RELEVANT_COMMENTS\":\n      return {\n        ...state,\n        relevantComments: [...action.payload],\n      };\n    // case \"RELEVANT_LIKES\":\n    //   return {\n    //     ...state,\n    //     relevantLikes: [...action.payload],\n    //   };\n    case \"SET_RELEVANT_USER_IMAGE\":\n      return {\n        ...state,\n        relevantUserImage: action.payload,\n      };\n    case \"SET_WHO_TO_FOLLOW\":\n      return {\n        ...state,\n        whoToFollow: [...action.payload],\n      };\n    case \"LOG_OUT\":\n      return {\n        ...state,\n        relationships: [],\n        loggedUser: {},\n      };\n    default: {\n      throw new Error(`Unsupported action type: ${action.type}`);\n    }\n  }\n}\n\n//provider\nexport function UserProvider(props) {\n  const [state, dispatch] = React.useReducer(dataReducer, {\n    loggedUser: {\n      username: \"\",\n      email: \"\",\n      userId: \"\",\n      joined: \"\",\n      bio: \"\",\n      website: \"\",\n      location: \"\",\n      profilePic: \"\",\n      notifications: [],\n    },\n    relationships: [],\n    userTweets: [],\n    tweets: [],\n    likes: [],\n    auth: false,\n    url: [],\n    relevantUser: [],\n    relevantRelationships: [],\n    relevantComments: [],\n    // relevantLikes: [],\n    relevantUserImage: \"\",\n    whoToFollow: [],\n  });\n\n  const value = React.useMemo(() => [state, dispatch], [state]);\n  return <UserContext.Provider value={value} {...props} />;\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport function LikeButton(props) {\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //-------------------------------------------------\n\n  //props.tweetid is a map of the tweets on tweets.js,\n  //likedPost() checks state.likes which holds ALL the likes from this user\n  //from tweets.js tweets. e.g if this user has liked 2 tweets from all the tweets\n  //on tweets.js then we have to find if there is a 'hit'\n  function likedPost() {\n    if (!state.likes[0]) {\n      return;\n    }\n    let result = state.likes.map((data) =>\n      data.tweetid === props.tweetId ? \"liked\" : null\n    );\n    if (result.find((x) => x === \"liked\")) {\n      return true;\n    }\n  }\n\n  //unlikePost-calls 'followTweets' endpoint straight after to refresh the likes state.\n  function unlikePost() {\n    const fetchData = async () => {\n      try {\n        await axios.post(\n          \"https://socialmedia-server.herokuapp.com/tweet/:tweetId/unlike\",\n          {\n            tweetId: props.tweetId,\n          }\n        );\n        const likes = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/followTweets\"\n        );\n        dispatch({ type: \"SET_LIKES\", payload: likes.data.likes });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //likePost\n  function likePost() {\n    const fetchData = async () => {\n      try {\n        await axios.post(\n          \"https://socialmedia-server.herokuapp.com/tweet/:tweetId/like\",\n          {\n            tweetId: props.tweetId,\n          }\n        );\n        const likes = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/followTweets\"\n        );\n        dispatch({ type: \"SET_LIKES\", payload: likes.data.likes });\n\n        //\n        postNotification();\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  let user;\n  let postId;\n\n  if (state.tweets[0]) {\n    if (!window.location.pathname === \"/\") {\n      user = state.relevantUser[0].username;\n      postId = state.url[0] && state.url[0].tweetId;\n    } else {\n      user = props.tweetUsername;\n      postId = props.tweetId;\n    }\n  }\n\n  //postNotification\n  function postNotification() {\n    const postData = async () => {\n      try {\n        await axios.post(\n          \"https://socialmedia-server.herokuapp.com/notifications\",\n          {\n            sender: state.loggedUser.username,\n            recipient: user,\n            type: \"liked\",\n            tweetId: postId,\n          }\n        );\n        console.log(\"posted notifications\");\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    postData();\n  }\n\n  //--------------------------------------------\n\n  //markup\n  const likeButton = likedPost() ? (\n    <Tooltip title=\"Undo like\" onClick={unlikePost}>\n      <IconButton>\n        <FavoriteIcon />\n      </IconButton>\n    </Tooltip>\n  ) : (\n    <Tooltip title=\"Like\" onClick={likePost}>\n      <IconButton>\n        <FavoriteBorder />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return likeButton;\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ChatIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\n//----------------------\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContainer: {\n    // display: \"flex\",\n    width: \"500px\",\n  },\n}));\n\n//----------------------------\n\nexport function Comments(props) {\n  const classes = useStyles();\n\n  //dayjs extesnsion plug\n  dayjs.extend(relativeTime);\n\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local state\n  const [open, setOpen] = React.useState(false);\n  const [reply, setReply] = React.useState(\"\");\n\n  //get tweetId from url\n  const currentTweetId = state.url[0] && state.url[0].tweetId;\n  //get tweet username from url\n  const currentTweetUsername = state.url[0] && state.url[0].username;\n\n  //eventHandlers\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleReply(e) {\n    setReply(e.target.value);\n  }\n\n  //------------------------------------------\n\n  //axios postreply\n  function handleComment() {\n    const postReply = async () => {\n      try {\n        const result = await axios.post(\n          `https://socialmedia-server.herokuapp.com/tweet/${\n            state.url[0] && state.url[0].username\n          }/${state.url[0] && state.url[0].tweetId}/${\n            state.loggedUser && state.loggedUser.username\n          }/comment`,\n          {\n            comment: reply,\n          }\n        );\n        console.log(\"posted reply\");\n        postNotification();\n      } catch {\n        console.log(\"cannot post reply\");\n      }\n    };\n    postReply();\n    handleClose();\n  }\n\n  //postNotification\n  function postNotification() {\n    const postData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/notifications\",\n          {\n            sender: state.loggedUser.username,\n            recipient: state.relevantUser[0].username,\n            type: \"commented\",\n            tweetId: currentTweetId,\n          }\n        );\n        console.log(\"posted notifications\");\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    postData();\n  }\n\n  //--------------------------------------\n\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.loggedUser && state.loggedUser.username\n  }? ${Date.now()}`;\n\n  //filteredTweets\n  let filteredTweets;\n  if (state.url[0]) {\n    state.loggedUser.username === currentTweetUsername\n      ? (filteredTweets = state.userTweets.filter(\n          (data) => data.id === parseInt(currentTweetId)\n        ))\n      : (filteredTweets = state.tweets.filter(\n          (data) => data.id === parseInt(currentTweetId)\n        ));\n  }\n\n  //markup\n  let markup;\n  if (state.url[0] && filteredTweets.length) {\n    markup = (\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar>\n              <img\n                src={`https://socialmedia-server.herokuapp.com/img/${\n                  filteredTweets[0] && filteredTweets[0].username\n                }? ${Date.now()}`}\n                style={{ width: \"100%\", objectFit: \"cover\" }}\n              />\n            </Avatar>\n          }\n          title={filteredTweets[0].username}\n          subheader={dayjs(state.tweets[0].created_at).fromNow()}\n        />\n        <CardContent>\n          <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n            {filteredTweets[0].content}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing></CardActions>\n      </Card>\n    );\n  }\n\n  //-------------------------------------------------\n\n  return (\n    <>\n      <IconButton aria-label=\"share\" onClick={handleClickOpen}>\n        <ChatIcon />\n      </IconButton>\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"sm\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\n        {markup}\n\n        <DialogContent>\n          <Avatar>\n            <img\n              src={profilePic ? profilePic : null}\n              style={{ width: \"100%\", objectFit: \"cover\" }}\n            />\n          </Avatar>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"text\"\n            type=\"text\"\n            fullWidth\n            placeholder=\"Tweet your reply\"\n            onChange={handleReply}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleComment} color=\"primary\">\n            Reply\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n// import { withRouter } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\n\nexport function DeleteButton(props) {\n  //from react-router-dom\n  let history = useHistory();\n\n  let postId;\n  if (props.tweetId) {\n    postId = props.tweetId;\n  } else {\n    postId = props.currentTweetId;\n  }\n\n  //props.tweetid is a map of the tweets on tweets.js,\n  //likedPost() checks state.likes which holds ALL the likes from this user\n  //from tweets.js tweets. e.g if this user has liked 2 tweets from all the tweets\n  //on tweets.js then we have to find if there is a 'hit'\n  function DeletePost() {\n    const deletePost = async () => {\n      try {\n        await axios.post(\n          `https://socialmedia-server.herokuapp.com/tweet/${postId}`\n        );\n        // dispatch({ type: \"SET_USER\", payload: result.data.user });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    deletePost();\n\n    //reroute\n    history.push(\"/\");\n  }\n\n  const DeleteButton = (\n    <Tooltip title=\"delete\" onClick={DeletePost}>\n      <IconButton>\n        <DeleteOutlinedIcon />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return DeleteButton;\n}\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\n\n//mui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Card, CardContent, CardActions, CardHeader } from \"@material-ui/core\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//components\nimport { LikeButton } from \"./LikeButton\";\nimport { Comments } from \"./Comments\";\nimport { DeleteButton } from \"./DeleteButton\";\nimport { Container, Box } from \"@material-ui/core\";\n\n//==========================================\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    // height: \"180px\",\n  },\n  inline: {\n    display: \"inline\",\n  },\n  content: {\n    padding: 0,\n    paddingLeft: 16,\n    \"&:last-child\": {\n      paddingBottom: 0,\n    },\n  },\n}));\n\nexport function Tweets() {\n  const classes = useStyles();\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //dayjs extesnsion plug\n  dayjs.extend(relativeTime);\n\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.url[0] && state.url[0].username\n  }? ${Date.now()}`;\n\n  //sort tweets by created_at\n  let orderedTweets;\n  if (state.tweets[0]) {\n    orderedTweets = state.tweets.sort(function compare(a, b) {\n      var dateA = new Date(a.created_at);\n      var dateB = new Date(b.created_at);\n      return dateB - dateA;\n    });\n  }\n\n  //markup\n  let tweetsMarkup;\n\n  if (state.tweets[0]) {\n    tweetsMarkup = orderedTweets.map((tweet) => (\n      <Card className={classes.root} key={tweet.id}>\n        <Link\n          to={`/${tweet.username}/${tweet.id}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n          key={tweet.id}\n        >\n          <CardHeader\n            avatar={\n              <Avatar component=\"span\">\n                <img\n                  src={`https://socialmedia-server.herokuapp.com/img/${\n                    tweet.username\n                  }? ${Date.now()}`}\n                  style={{ width: \"150%\", objectFit: \"cover\" }}\n                />\n              </Avatar>\n            }\n            // titleTypographyProps={{ color: \"pink\" }}\n            title={\n              <Typography style={{ display: \"flex\" }}>\n                {tweet.username}\n              </Typography>\n            }\n            subheader={\n              <div style={{ display: \"flex\" }}>\n                <Typography style={{ marginRight: 5 }}>\n                  {` @${tweet.username}`} -{\" \"}\n                </Typography>{\" \"}\n                <Typography> {dayjs(tweet.created_at).fromNow()}</Typography>\n              </div>\n            }\n          />\n\n          <CardContent className={classes.content}>\n            <React.Fragment>\n              <Typography\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {tweet.content}\n              </Typography>\n            </React.Fragment>\n          </CardContent>\n        </Link>\n\n        <CardActions>\n          <React.Fragment>\n            <Container\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginLeft: \"-20px\",\n              }}\n            >\n              <Box>\n                {tweet.likescount}{\" \"}\n                <LikeButton\n                  tweetId={tweet.id}\n                  key={tweet.id}\n                  tweet={tweet}\n                  tweetUsername={tweet.username}\n                />\n              </Box>\n\n              <Box>\n                {tweet.commentcount}\n                <Comments />\n              </Box>\n            </Container>\n          </React.Fragment>\n        </CardActions>\n\n        <Divider />\n      </Card>\n    ));\n  } else {\n  }\n\n  return <div>{tweetsMarkup}</div>;\n}\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//components\nimport { Tweets } from \"./Tweets\";\n\n//==========================================\n\nexport function HomeTweets() {\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //followtweets\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/followTweets\"\n        );\n\n        dispatch({ type: \"SET_TWEETS\", payload: result.data.tweets });\n        dispatch({ type: \"SET_LIKES\", payload: result.data.likes });\n\n        setLoading(false);\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div style={{ paddingTop: \"10px\" }}>{!loading ? <Tweets /> : null}</div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\nimport { Avatar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Container } from \"@material-ui/core\";\n\nexport function FollowButton(props) {\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //check if logged user is following this users profile, if yes color icon, no is black\n  function followUser() {\n    if (!state.relationships[0]) {\n      return;\n    }\n    let following = state.relationships.map((data) =>\n      data.followed_username === state.url[0].username ? \"following\" : null\n    );\n    if (following.find((x) => x === \"following\")) {\n      return true;\n    }\n  }\n\n  //unfollow\n  function handleUnfollow() {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/unFollow\",\n          {\n            toUnfollowUsername: state.url[0].username,\n          }\n        );\n        dispatch({ type: \"SET_RELATIONSHIPS\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //follow\n  function handleFollow() {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/follow\",\n          {\n            toFollowUsername: state.url[0].username,\n          }\n        );\n        dispatch({ type: \"SET_RELATIONSHIPS\", payload: result.data });\n        postNotification();\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //postNotification\n  function postNotification() {\n    const postData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/notifications\",\n          {\n            sender: state.loggedUser.username,\n            recipient: state.relevantUser[0].username,\n            type: \"followed\",\n          }\n        );\n        console.log(\"posted notifications\");\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    postData();\n  }\n\n  const followButton = followUser() ? (\n    <Tooltip title=\"unfollow\" onClick={handleUnfollow}>\n      <IconButton>\n        <img\n          alt=\"\"\n          src={require(\"../assets/svg/color.svg\")}\n          style={{ width: \"30px\" }}\n        />\n      </IconButton>\n    </Tooltip>\n  ) : (\n    <Tooltip title=\"follow\" onClick={handleFollow}>\n      <IconButton>\n        <img\n          alt=\"\"\n          src={require(\"../assets/svg/black.svg\")}\n          style={{ width: \"30px\" }}\n        />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return <div>{followButton}</div>;\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport { Container } from \"@material-ui/core\";\n\n//components\nimport { FollowButton } from \"./FollowButton\";\n\n//=====================================\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"170px\",\n    width: \"100%\",\n  },\n  inline: {\n    display: \"inline\",\n  },\n  listItemStyle: {\n    maxWidth: \"320px\",\n  },\n}));\n\n//=========================================\n\nexport function Relevant(props) {\n  const classes = useStyles();\n\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //relevantUser- relies on state.url set to be same as user in TweetDetails\n  React.useEffect(() => {\n    //toggle loading\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/relevantUser\",\n          {\n            relevantUsername: state.url[0].username,\n          }\n        );\n\n        dispatch({ type: \"SET_RELEVANT_USER\", payload: result.data });\n\n        //toggle loading\n        setLoading(false);\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, [state.url]);\n\n  //\n  function handleClick() {\n    console.log(\"hello\");\n  }\n\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.url[0] && state.url[0].username\n  }? ${Date.now()}`;\n\n  //markup\n  let markup = (\n    <Card className={classes.root}>\n      <List>\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          className={classes.inline}\n          color=\"textPrimary\"\n          style={{\n            marginLeft: \"55px\",\n            fontWeight: \"bold\",\n          }}\n        >\n          {\" \"}\n          Relevant people\n        </Typography>\n        <Divider variant=\"fullWidth\" component=\"li\" />\n\n        <ListItem alignItems=\"flex-start\" className={classes.listItemStyle}>\n          <div style={{ paddingRight: \"15px\", paddingTop: \"6px\" }}>\n            <Avatar component=\"span\">\n              <img\n                src={profilePic ? profilePic : null}\n                style={{ width: \"100%\", objectFit: \"cover\" }}\n              />\n            </Avatar>{\" \"}\n          </div>\n          <Link\n            to={`/${state.relevantUser[0] && state.relevantUser[0].username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <ListItemText\n              // className={classes.listItem}\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"h5\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    @{state.relevantUser[0] && state.relevantUser[0].username}\n                  </Typography>\n                  <br />\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {state.relevantUser[0] && state.relevantUser[0].bio}\n                  </Typography>\n                </React.Fragment>\n              }\n            />\n          </Link>\n          <FollowButton />\n        </ListItem>\n      </List>\n    </Card>\n  );\n\n  return <div>{!loading ? markup : null}</div>;\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\nimport { Avatar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport function WtfFollowButton(props) {\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //check if logged user is following this users profile, if yes color icon, no is black\n  function followUser() {\n    if (!state.relationships[0]) {\n      return;\n    }\n    let following = state.relationships.map((data) =>\n      data.followed_username === props.username ? \"following\" : null\n    );\n\n    if (following.find((x) => x === \"following\")) {\n      return true;\n    }\n  }\n\n  //unfollow\n  function handleUnfollow() {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/unFollow\",\n          {\n            toUnfollowUsername: props.username,\n          }\n        );\n        dispatch({ type: \"SET_RELATIONSHIPS\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //follow\n  function handleFollow() {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/follow\",\n          {\n            toFollowUsername: props.username,\n          }\n        );\n        dispatch({ type: \"SET_RELATIONSHIPS\", payload: result.data });\n        postNotification();\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //postNotification\n  function postNotification() {\n    const postData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/notifications\",\n          {\n            sender: state.loggedUser.username,\n            recipient: props.username,\n            type: \"followed\",\n          }\n        );\n        console.log(\"posted notifications\");\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    postData();\n  }\n\n  const followButton = followUser() ? (\n    <Tooltip title=\"unfollow\" onClick={handleUnfollow}>\n      <IconButton>\n        <img\n          alt=\"\"\n          src={require(\"../assets/svg/color.svg\")}\n          style={{ width: \"30px\" }}\n        />\n      </IconButton>\n    </Tooltip>\n  ) : (\n    <Tooltip title=\"follow\" onClick={handleFollow}>\n      <IconButton>\n        <img\n          alt=\"\"\n          src={require(\"../assets/svg/black.svg\")}\n          style={{ width: \"30px\" }}\n        />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return <div>{followButton}</div>;\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\n//components\nimport { WtfFollowButton } from \"./whoToFollowFollowButton\";\n\n//=====================================\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"350px\",\n    maxWidth: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  mainCard: {\n    height: \"140px\",\n  },\n}));\n\n//=========================================\n\nexport function WhoToFollow(props) {\n  const classes = useStyles();\n\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //markup\n  let whoToFollow;\n  if (state.whoToFollow[0]) {\n    whoToFollow = state.whoToFollow.map((user, idx) => (\n      <Card className={classes.mainCard} key={idx}>\n        <List className={classes.root}>\n          <Divider variant=\"fullWidth\" component=\"li\" />\n\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar component=\"span\">\n                <img\n                  src={`https://socialmedia-server.herokuapp.com/img/${\n                    user.username\n                  }? ${Date.now()}`}\n                  style={{ width: \"100%\", objectFit: \"cover\" }}\n                />\n              </Avatar>\n            </ListItemAvatar>\n            <Link to={`/${user.username}`} style={{ textDecoration: \"none\" }}>\n              <ListItemText\n                //   primary={state.relevantUser[0] && state.relevantUser[0].username}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"h5\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      @{user.username}\n                    </Typography>\n                    <br />\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {user.bio}\n                    </Typography>\n                  </React.Fragment>\n                }\n              />\n            </Link>\n            <WtfFollowButton username={user.username} />\n          </ListItem>\n        </List>\n      </Card>\n    ));\n  } else {\n    return \"nothing here\";\n  }\n\n  return (\n    <div>\n      {!loading ? (\n        <Card>\n          <Typography\n            component=\"span\"\n            variant=\"h5\"\n            className={classes.inline}\n            color=\"textPrimary\"\n            style={{ marginLeft: \"55px\", fontWeight: \"bold\" }}\n          >\n            {\" \"}\n            Who to follow\n          </Typography>\n          {whoToFollow}\n        </Card>\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//components\nimport { Relevant } from \"./Relevant\";\nimport { WhoToFollow } from \"./WhoToFollow\";\n\n//if url in state has user data render <Relevant/> if not something else\n\nexport function SideBar(props) {\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //whoTofollow\n  React.useEffect(() => {\n    //toggel loading state\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/whoToFollow\"\n        );\n        dispatch({\n          type: \"SET_WHO_TO_FOLLOW\",\n          payload: result.data,\n        });\n\n        //toggle loading state\n        setLoading(false);\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, [state.auth]);\n\n  //user\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/user\"\n        );\n        dispatch({ type: \"SET_USER\", payload: result.data });\n        dispatch({\n          type: \"SET_RELATIONSHIPS\",\n          payload: result.data.relationships,\n        });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div style={{ paddingTop: \"10px\" }}>\n      {!loading ? (\n        state.url[0] && state.url[0].username !== state.loggedUser.username ? (\n          <Relevant />\n        ) : (\n          <WhoToFollow />\n        )\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//mui\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Container, ListItem } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//===========================================\n\nconst useStyles = makeStyles((theme) => ({\n  palette: {\n    primary: {\n      main: \"red\",\n    },\n  },\n  root: {\n    // display: \"flex\",\n    // flexWrap: \"wrap\",\n    height: \"100px\",\n  },\n  textField: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n  postButton: {\n    marginRight: \"-390px\",\n    marginTop: \"40px\",\n    padding: \"10px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      // width: theme.spacing(8) + 1,\n      marginLeft: \"-100px\",\n      marginBottom: \"-10px\",\n      height: \"20px\",\n      fontSize: \"0.5rem\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      // width: theme.spacing(8) + 1,\n      marginRight: \"-300px\",\n      fontSize: \"0.5rem\",\n    },\n  },\n}));\n\nexport function HomePostTweet() {\n  const classes = useStyles();\n\n  //context\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local\n  const [tweet, setTweet] = React.useState(\"\");\n\n  //set tweet state\n  function handleTweet(e) {\n    setTweet(e.target.value);\n  }\n\n  //axios postTweet\n  function handlePostTweet() {\n    const postTweet = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/postTweet\",\n          {\n            content: tweet,\n          }\n        );\n        console.log(\"posted tweet\");\n      } catch {\n        console.log(\"cannot post tweet\");\n      }\n    };\n\n    postTweet();\n    handleClear();\n  }\n\n  function handleClear() {\n    setTweet(\"\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container style={{ marginLeft: \"-24px\" }}>\n        <ListItem>\n          <Avatar component=\"span\">\n            <img\n              src={`https://socialmedia-server.herokuapp.com/img/${\n                state.loggedUser && state.loggedUser.username\n              }? ${Date.now()}`}\n              style={{ width: \"150%\", objectFit: \"cover\" }}\n            />\n          </Avatar>\n          <TextField\n            id=\"standard-full-width\"\n            style={{ margin: 10 }}\n            placeholder=\"What's happening?\"\n            fullWidth\n            value={tweet}\n            onChange={handleTweet}\n          />\n          <Container\n            className={classes.postButton}\n            // style={{\n            //   marginRight: \"-390px\",\n            //   marginTop: \"40px\",\n            //   padding: \"10px\",\n            // }}\n          >\n            <Button\n              onClick={handlePostTweet}\n              color=\"primary\"\n              //   style={{ color: \"#87CEFA\" }}\n              variant=\"contained\"\n            >\n              Post\n            </Button>\n          </Container>\n        </ListItem>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\n\n//components\nimport { Tweets } from \"./Tweets\";\nimport { HomeTweets } from \"./HomeTweets\";\nimport { SideBar } from \"./SideBar\";\nimport { HomePostTweet } from \"./HomePostTweet\";\nimport { Card } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//mui\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { Typography } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n//muistyle\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//=====mui styles===============\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\n//home=========================================\nexport function Home() {\n  const classes = useStyles();\n\n  //context\n  const [state, dispatch] = useContext(UserContext);\n\n  //user\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/user\"\n        );\n        dispatch({ type: \"SET_USER\", payload: result.data });\n        dispatch({\n          type: \"SET_RELATIONSHIPS\",\n          payload: result.data.relationships,\n        });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  //reset state.url to null so <SideBar/> can render different components\n  useEffect(() => {\n    dispatch({ type: \"URL_DATA\", payload: null });\n  }, []);\n\n  return (\n    <div style={{ paddingTop: \"10px\" }}>\n      <Card>\n        <Typography\n          variant=\"h2\"\n          style={{\n            fontSize: \"1.2rem\",\n            fontWeight: \"bold\",\n            paddingLeft: \"10px\",\n          }}\n        >\n          {\"Home\"}\n          <IconButton style={{ paddingLeft: \"450px\" }}>\n            <img\n              alt=\"\"\n              src={require(\"../assets/svg/virus.svg\")}\n              style={{ width: \"30px\" }}\n            />\n          </IconButton>\n        </Typography>\n      </Card>\n      <Divider light={true} />\n      <Card>\n        <HomePostTweet />\n      </Card>\n      <HomeTweets />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"} */}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  customError: {\n    color: \"red\",\n  },\n}));\n\nexport function LogIn(props) {\n  const classes = useStyles();\n\n  //local state\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //errors\n  const [errors, setErrors] = useState({\n    errors: {\n      email: \"\",\n      password: \"\",\n      general: \"\",\n    },\n  });\n\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  //redirect\n  if (localStorage.jwt) {\n    return <Redirect to=\"/\" />;\n  }\n\n  //handlers\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  //--------------------------\n  //axios login\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const loginUser = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/login\",\n          {\n            email: email,\n            password: password,\n          }\n        );\n\n        const token = `Bearer ${result.data}`;\n        localStorage.setItem(\"jwt\", token);\n\n        console.log(\"working here\");\n        dispatch({ type: \"SET_AUTH\", payload: true });\n\n        // props.history.push(\"/\");\n      } catch (err) {\n        console.log(\"login failed\");\n        setErrors(err.response.data);\n      }\n    };\n\n    loginUser();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            error={errors.errors.email ? true : false}\n            helperText={errors.errors.email}\n            onChange={handleEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            error={errors.errors.password ? true : false}\n            helperText={errors.errors.password}\n            onChange={handlePassword}\n          />\n          <Grid container>\n            <Grid>\n              {errors.errors.general && (\n                <Typography variant=\"body2\" className={classes.customError}>\n                  {errors.errors.general}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            {/* <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid> */}{\" \"}\n            <Grid item>\n              {\"Don't have an account?\"}\n              <Link\n                to=\"/register\"\n                style={{ textDecoration: \"none\", color: \"black\" }}\n              >\n                {\" Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect, useContext } from \"react\";\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n//components\nimport { LikeButton } from \"./LikeButton\";\nimport { Comments } from \"./Comments\";\nimport { DeleteButton } from \"./DeleteButton\";\nimport { Container, Box } from \"@material-ui/core\";\n\n//=========\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 700,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  // action: {\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  // },\n}));\n//---------------------\n\nexport function TweetDetails(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  //dayjs extesnsion plug\n  dayjs.extend(relativeTime);\n\n  //=================================================\n\n  const handleExpandClick = (props) => {\n    setExpanded(!expanded);\n  };\n\n  //sets url data to state so can access match.params in other componenents\n  useEffect(() => {\n    dispatch({ type: \"URL_DATA\", payload: props.match.params });\n  }, []);\n\n  //relevantComments\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          `https://socialmedia-server.herokuapp.com/comment/${props.match.params.username}/${props.match.params.tweetId}`\n        );\n\n        dispatch({ type: \"SET_RELEVANT_COMMENTS\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, [state.tweets[0]]);\n\n  //user\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/user\"\n        );\n\n        dispatch({ type: \"SET_USER\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  //followtweets and likes\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/followTweets\"\n        );\n        dispatch({ type: \"SET_TWEETS\", payload: result.data.tweets });\n        dispatch({ type: \"SET_LIKES\", payload: result.data.likes });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  //userTweets\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/userTweets\"\n        );\n\n        dispatch({ type: \"SET_USER_TWEETS\", payload: result.data });\n        setLoading(false);\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  //===========================================\n\n  //get tweetId from url\n  const currentTweetId = props.match.params.tweetId;\n\n  //get tweet username from url\n  const currentTweetUsername = props.match.params.username;\n\n  //filter the tweet in state-if the username in url matches the username in url state then filter userTweets not followTweet\n  //NOTE= props.match.params.tweetId is a STRING number and NOT an integer so must use 'parseINT' to turn to integer or '===' will fail\n  let filteredTweets;\n  if (state.tweets[0]) {\n    state.loggedUser.username === props.match.params.username\n      ? (filteredTweets = state.userTweets.filter(\n          (data) => data.id === parseInt(currentTweetId)\n        ))\n      : (filteredTweets = state.tweets.filter(\n          (data) => data.id === parseInt(currentTweetId)\n        ));\n  }\n\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.url[0] && state.url[0].username\n  }? ${Date.now()}`;\n\n  console.log(filteredTweets);\n\n  //markup\n  if (filteredTweets && filteredTweets.length) {\n    filteredTweets = (\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar>\n              <img\n                src={profilePic ? profilePic : null}\n                style={{ width: \"100%\", objectFit: \"cover\" }}\n              />\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={`@${filteredTweets[0] && filteredTweets[0].username}`}\n          subheader={dayjs(\n            filteredTweets[0] && filteredTweets[0].created_at\n          ).fromNow()}\n        />\n        <CardContent>\n          <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n            {filteredTweets[0] && filteredTweets[0].content}\n          </Typography>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"space-between\" }}>\n          <Box style={{ paddingLeft: \"20px\" }}>\n            {filteredTweets[0] && filteredTweets[0].likescount}\n            <LikeButton tweetId={parseInt(currentTweetId)} />\n          </Box>\n          <Box>\n            {filteredTweets[0] && filteredTweets[0].commentcount}\n            <Comments\n              currentTweetId={currentTweetId}\n              currentTweetUsername={currentTweetUsername}\n            />\n          </Box>\n          <Box>\n            {currentTweetUsername === state.loggedUser.username ? (\n              <DeleteButton currentTweetId={currentTweetId} />\n            ) : null}\n          </Box>\n\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n  } else {\n    return (\n      <div>\n        <h3>Sorry no tweet found</h3>\n      </div>\n    );\n  }\n\n  ///comments markup\n  let commentMarkup;\n  if (state.relevantComments[0]) {\n    commentMarkup = state.relevantComments.map((comment) => (\n      <List className={classes.root} key={comment.id}>\n        <Card>\n          <ListItem alignItems=\"flex-start\">\n            <div style={{ paddingRight: \"15px\" }}>\n              <Avatar component=\"span\">\n                <img\n                  src={`https://socialmedia-server.herokuapp.com/img/${\n                    comment.senderusername\n                  }? ${Date.now()}`}\n                  style={{ width: \"150%\", objectFit: \"cover\" }}\n                />\n              </Avatar>{\" \"}\n            </div>\n            <ListItemText\n              primary={\n                <Link\n                  to={`/${comment.senderusername}`}\n                  style={{ textDecoration: \"none\", color: \"black\" }}\n                >\n                  {`@${comment.senderusername}`}{\" \"}\n                </Link>\n              }\n              secondary={\n                <React.Fragment>\n                  <Typography>\n                    {\"Replying to\"}\n                    <Link\n                      to={`/${state.url[0] && state.url[0].username}`}\n                      style={{ textDecoration: \"none\", color: \"#87CEFA\" }}\n                    >\n                      {` ${state.url[0] && state.url[0].username}`}{\" \"}\n                    </Link>\n                  </Typography>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body1\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {comment.comments}\n                  </Typography>\n                  <br />\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {dayjs(comment.created_at).fromNow()}\n                  </Typography>\n                  <br />\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        </Card>\n      </List>\n    ));\n  }\n\n  return (\n    <>\n      <div>{!loading ? filteredTweets : null}</div>\n      <div>{!loading ? commentMarkup && commentMarkup : null}</div>\n    </>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\n//----------------------\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContainer: {\n    // display: \"flex\",\n    width: \"500px\",\n  },\n}));\n\n//----------------------------\n\nexport function PostTweet() {\n  const classes = useStyles();\n\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local state\n  const [open, setOpen] = React.useState(false);\n  const [tweet, setTweet] = React.useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleTweet(e) {\n    setTweet(e.target.value);\n  }\n\n  //axios postTweet\n  function handlePostTweet() {\n    const postTweet = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/postTweet\",\n          {\n            content: tweet,\n            urlUser: state.url[0] && state.url[0].username,\n          }\n        );\n        dispatch({ type: \"SET_TWEETS\", payload: result.data });\n        console.log(\"posted tweet\");\n      } catch {\n        console.log(\"cannot post tweet\");\n      }\n    };\n\n    postTweet();\n\n    handleClose();\n  }\n\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.loggedUser && state.loggedUser.username\n  }? ${Date.now()}`;\n\n  //media query fro mui (button size)\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const buttonProps = {\n    variant: isSmallScreen ? \"text\" : \"contained\",\n    size: isSmallScreen ? \"small\" : \"large\",\n    startIcon: isSmallScreen ? <SendIcon /> : null,\n  };\n  //-----------------\n\n  return (\n    <div>\n      <Button\n        {...buttonProps}\n        // variant=\"contained\"\n        // size=\"small\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Post\n      </Button>\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"sm\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n\n        <DialogContent>\n          <Avatar>\n            <img\n              src={profilePic ? profilePic : null}\n              style={{ width: \"100%\", objectFit: \"cover\" }}\n            />\n          </Avatar>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText> */}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"text\"\n            type=\"text\"\n            fullWidth\n            placeholder=\"What's on your mind?\"\n            onChange={handleTweet}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handlePostTweet} color=\"primary\">\n            Post\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//dayjs import\nimport dayjs from \"dayjs\";\n\n//mui\nimport Hidden from \"@material-ui/core/Hidden\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Badge, MenuItem } from \"@material-ui/core\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport Star from \"@material-ui/icons/Star\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { Menu } from \"@material-ui/core\";\n\n//---------------------------------------\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    overflowY: \"hidden\",\n    // width: theme.spacing(7) + 1,\n    [theme.breakpoints.down(\"md\")]: {\n      width: theme.spacing(8) + 1,\n      overflowX: \"hidden\",\n    },\n  },\n  postTweet: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"50px\",\n  },\n  listItems: {\n    [theme.breakpoints.down(\"md\")]: {\n      width: 0,\n      display: \"inline\",\n    },\n  },\n}));\n\n///=========================================================\n\nexport function NotificationsButton() {\n  const classes = useStyles();\n\n  //menu state\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  //--------------------------------\n\n  //handleOpen\n  function handleOpen(event) {\n    setAnchorEl(event.target);\n  }\n\n  //handleClsoe\n  function handleClose() {\n    setAnchorEl(null);\n\n    //call getUser to update marked notifications\n    getLoggedUser();\n  }\n\n  //menuOpen\n  function onMenuOpened() {\n    let unreadNotificationsId = state.loggedUser.notifications\n      .filter((not) => !not.read)\n      .map((not) => not.id);\n\n    const postData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/markNotifications\",\n          {\n            unreadNotificationId: unreadNotificationsId,\n          }\n        );\n\n        // getLoggedUser();\n        console.log(\"updatednotifications\");\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    postData();\n  }\n\n  //getUser\n  function getLoggedUser() {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/user\"\n        );\n        dispatch({ type: \"SET_USER\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //---------------------------------\n\n  // let orderedNotifications;\n  // let orderedNotifications;\n  // if (state.loggedUser) {\n  //   orderedNotifications = state.loggedUser.notifications\n  //     ? state.loggedUser.notifications.sort(function compare(a, b) {\n  //         var dateA = new Date(a.created_at);\n  //         var dateB = new Date(b.created_at);\n  //         return dateB - dateA;\n  //       })\n  //     : null;\n  // }\n  // console.log(orderedNotifications);\n\n  let notificationIcon;\n\n  if (\n    state.loggedUser.notifications &&\n    state.loggedUser.notifications.length > 0\n  ) {\n    state.loggedUser.notifications.filter((not) => not.read === false).length >\n    0\n      ? (notificationIcon = (\n          <Badge\n            badgeContent={\n              state.loggedUser.notifications.filter((not) => not.read === false)\n                .length\n            }\n            color=\"secondary\"\n          >\n            <NotificationsIcon />\n          </Badge>\n        ))\n      : (notificationIcon = <NotificationsIcon />);\n  } else {\n    notificationIcon = <NotificationsIcon />;\n  }\n\n  //notificationsMarkup\n  //\n  let notificationsMarkup =\n    state.loggedUser.notifications &&\n    state.loggedUser.notifications.length > 0 ? (\n      state.loggedUser.notifications.map((not) => {\n        let verb;\n        if (not.type === \"liked\") {\n          verb = \"liked\";\n        } else if (not.type === \"commented\") {\n          verb = \"commented\";\n        } else if (not.type === \"followed\") {\n          verb = \"followed\";\n        }\n\n        const time = dayjs(not.created_at).fromNow();\n        const iconColor = not.read ? \"primary\" : \"secondary\";\n\n        let icon;\n        if (not.type === \"liked\") {\n          icon = <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />;\n        } else if (not.type === \"commented\") {\n          icon = <ChatIcon color={iconColor} style={{ marginRight: 10 }} />;\n        } else {\n          icon = <Star color={iconColor} style={{ marginRight: 10 }} />;\n        }\n\n        let outPut;\n        if (not.type === \"liked\") {\n          outPut = (\n            <MenuItem key={not.created_at} onClick={handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"primary\"\n                variant=\"body1\"\n                to={`/${not.recipient}/${not.tweetid}`}\n              >\n                {not.sender} {verb} your post {time}\n              </Typography>\n            </MenuItem>\n          );\n        } else if (not.type === \"commented\") {\n          outPut = (\n            <MenuItem key={not.created_at} onClick={handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"primary\"\n                variant=\"body1\"\n                to={`/${not.recipient}/${not.tweetid}`}\n              >\n                {not.sender} {verb} your post {time}\n              </Typography>\n            </MenuItem>\n          );\n        } else {\n          outPut = (\n            <MenuItem key={not.created_at} onClick={handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"primary\"\n                variant=\"body1\"\n                to={`/${not.sender}`}\n              >\n                {not.sender} {verb} you {time}\n              </Typography>\n            </MenuItem>\n          );\n        }\n        return outPut;\n      })\n    ) : (\n      <MenuItem onClick={handleClose}>You have no notifications yet</MenuItem>\n    );\n\n  //--------------------------------------------------------------------\n\n  return (\n    <ListItem button className={classes.listItems}>\n      <ListItemIcon>\n        <IconButton\n          aria-owns={anchorEl ? \"simple-menu\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n          style={{ marginLeft: \"-12px\" }}\n        >\n          {notificationIcon}\n        </IconButton>\n      </ListItemIcon>\n      <Hidden mdDown>\n        <ListItemText primary={\"Notifications\"} />\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        onEntered={onMenuOpened}\n      >\n        {notificationsMarkup}\n      </Menu>\n    </ListItem>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//dayjs import\nimport dayjs from \"dayjs\";\n\n//mui\nimport Divider from \"@material-ui/core/Divider\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ExitIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { Badge, MenuItem } from \"@material-ui/core\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport Star from \"@material-ui/icons/Star\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\n//components\nimport { PostTweet } from \"./PostTweet\";\nimport { NotificationsButton } from \"./NotificationsButton\";\n\n//---------------------------------------\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    overflowY: \"hidden\",\n    // width: theme.spacing(7) + 1,\n    [theme.breakpoints.down(\"md\")]: {\n      width: theme.spacing(8) + 1,\n      overflowX: \"hidden\",\n    },\n  },\n  postTweet: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"50px\",\n  },\n}));\n\n///=========================================================\n\nexport function Navigations(props) {\n  const classes = useStyles();\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  //menu state\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  //--------\n\n  React.useEffect(() => {\n    if (!localStorage.jwt) return () => <Redirect to=\"/login\" />;\n  });\n\n  //logout\n  function handlelogOut() {\n    localStorage.removeItem(\"jwt\");\n    delete axios.defaults.headers.common[\"Authorization\"];\n    dispatch({ type: \"SET_AUTH\", payload: false });\n    dispatch({ type: \"LOG_OUT\" });\n  }\n\n  //--------------------------------\n\n  //handleOpen\n  function handleOpen(event) {\n    setAnchorEl(event.target);\n  }\n\n  //handleClsoe\n  function handleClose() {\n    setAnchorEl(null);\n\n    //call getUser to update marked notifications\n    getLoggedUser();\n  }\n\n  //menuOpen\n  function onMenuOpened() {\n    let unreadNotificationsId = state.loggedUser.notifications\n      .filter((not) => !not.read)\n      .map((not) => not.id);\n\n    const postData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/markNotifications\",\n          {\n            unreadNotificationId: unreadNotificationsId,\n          }\n        );\n\n        // getLoggedUser();\n        console.log(\"updatednotifications\");\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    postData();\n  }\n\n  //getUser\n  function getLoggedUser() {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/user\"\n        );\n        dispatch({ type: \"SET_USER\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }\n\n  //sort tweets by created_at\n  // let orderedTweets;\n  // if (state.loggedUser.notifications[0]) {\n  //   orderedTweets = state.tweets.sort(function compare(a, b) {\n  //     var dateA = new Date(a.created_at);\n  //     var dateB = new Date(b.created_at);\n  //     return dateB - dateA;\n  //   });\n  // }\n\n  //---------------------------------\n  let notificationIcon;\n\n  if (\n    state.loggedUser.notifications &&\n    state.loggedUser.notifications.length > 0\n  ) {\n    state.loggedUser.notifications.filter((not) => not.read === false).length >\n    0\n      ? (notificationIcon = (\n          <Badge\n            badgeContent={\n              state.loggedUser.notifications.filter((not) => not.read === false)\n                .length\n            }\n            color=\"secondary\"\n          >\n            <NotificationsIcon />\n          </Badge>\n        ))\n      : (notificationIcon = <NotificationsIcon />);\n  } else {\n    notificationIcon = <NotificationsIcon />;\n  }\n\n  //notificationsMarkup\n  //\n  let notificationsMarkup =\n    state.loggedUser.notifications &&\n    state.loggedUser.notifications.length > 0 ? (\n      state.loggedUser.notifications.map((not) => {\n        let verb;\n        if (not.type === \"liked\") {\n          verb = \"liked\";\n        } else if (not.type === \"commented\") {\n          verb = \"commented\";\n        } else if (not.type === \"followed\") {\n          verb = \"followed\";\n        }\n\n        const time = dayjs(not.created_at).fromNow();\n        const iconColor = not.read ? \"primary\" : \"secondary\";\n\n        let icon;\n        if (not.type === \"liked\") {\n          icon = <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />;\n        } else if (not.type === \"commented\") {\n          icon = <ChatIcon color={iconColor} style={{ marginRight: 10 }} />;\n        } else {\n          icon = <Star color={iconColor} style={{ marginRight: 10 }} />;\n        }\n\n        //creates the 'return outPut' inside  the map() 'notificationsMarkup'\n        let outPut;\n        if (not.type === \"liked\") {\n          outPut = (\n            <MenuItem key={not.created_at} onClick={handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"primary\"\n                variant=\"body1\"\n                to={`/${not.recipient}/${not.tweetid}`}\n              >\n                {not.sender} {verb} your post {time}\n              </Typography>\n            </MenuItem>\n          );\n        } else if (not.type === \"commented\") {\n          outPut = (\n            <MenuItem key={not.created_at} onClick={handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"primary\"\n                variant=\"body1\"\n                to={`/${not.recipient}/${not.tweetid}`}\n              >\n                {not.sender} {verb} your post {time}\n              </Typography>\n            </MenuItem>\n          );\n        } else {\n          outPut = (\n            <MenuItem key={not.created_at} onClick={handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"primary\"\n                variant=\"body1\"\n                to={`/${not.sender}`}\n              >\n                {not.sender} {verb} you {time}\n              </Typography>\n            </MenuItem>\n          );\n        }\n        return outPut;\n      })\n    ) : (\n      <MenuItem onClick={handleClose}>You have no notifications yet</MenuItem>\n    );\n\n  //--------------------------------------------------------------------\n  let drawer;\n\n  if (localStorage.jwt) {\n    drawer = (\n      <div>\n        {/* <div className={classes.toolbar} className={drawer} /> */}\n        <Divider />\n        <List>\n          <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <Hidden mdDown>\n                <ListItemText primary={\"Home\"} />\n              </Hidden>\n            </ListItem>\n          </Link>\n\n          <Link\n            to={`/${state.loggedUser.username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n              <Hidden mdDown>\n                <ListItemText primary={\"Profile\"} />\n              </Hidden>\n            </ListItem>\n          </Link>\n\n          <NotificationsButton />\n\n          <Link to=\"/login\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button onClick={handlelogOut}>\n              <ListItemIcon>\n                <ExitIcon />\n              </ListItemIcon>\n              <Hidden mdDown>\n                <ListItemText\n                  primary={`Log out @${state.loggedUser.username}`}\n                />\n              </Hidden>\n            </ListItem>\n          </Link>\n\n          <Divider />\n\n          <ListItem className={classes.postTweet}>\n            <PostTweet />\n          </ListItem>\n\n          <ListItem\n            alignItems=\"flex-start\"\n            className={classes.NavProfile}\n            style={{ paddingTop: \"400px\" }}\n          >\n            <ListItemAvatar>\n              <Avatar component=\"span\">\n                <img\n                  src={`https://socialmedia-server.herokuapp.com/img/${\n                    state.loggedUser && state.loggedUser.username\n                  }? ${Date.now()}`}\n                  style={{ width: \"150%\", objectFit: \"cover\" }}\n                />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={state.loggedUser.username}\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {/* {state.username} */}\n                  </Typography>\n                  @{state.loggedUser.username}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        </List>\n      </div>\n    );\n  } else {\n    drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Home\"} />\n            </ListItem>\n          </Link>\n\n          <Link to=\"/login\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Login\"} />\n            </ListItem>\n          </Link>\n\n          <Link\n            to=\"/register\"\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Register\"} />\n            </ListItem>\n          </Link>\n\n          <Link\n            to={`/${state.loggedUser.username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <ListItem button>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Profile\"} />\n            </ListItem>\n          </Link>\n\n          <Divider />\n          <ListItem className={classes.postTweet}></ListItem>\n          <ListItem alignItems=\"flex-start\" className={classes.NavProfile}>\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  ></Typography>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        </List>\n      </div>\n    );\n  }\n\n  // const container =\n  //   window !== undefined ? () => window().document.body : undefined;\n\n  return <div className={classes.drawer}>{drawer}</div>;\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  editProfile: {\n    overflowY: \"hidden\",\n    marginLeft: \"400px\",\n    [theme.breakpoints.down(\"md\")]: {\n      // width: theme.spacing(8) + 1,\n      marginLeft: \"130px\",\n      fontSize: \"0.5rem\",\n    },\n  },\n}));\n\nexport function EditProfile(props) {\n  //mui\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local state form\n  const [bio, setBio] = React.useState(\"\");\n  const [website, setWebsite] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n\n  //open dialog box\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  //close dialogue box\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //set default values to state, if not form will overwrite previous if not input\n  React.useEffect(() => {\n    setBio(state.loggedUser.bio);\n    setWebsite(state.loggedUser.website);\n    setLocation(state.loggedUser.location);\n  }, []);\n\n  //editDetails\n  function handleSubmitForm() {\n    setOpen(false);\n\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/editDetails\",\n          {\n            bio: bio,\n            website: website,\n            location: location,\n          }\n        );\n\n        dispatch({ type: \"SET_USER\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n\n    //relevantuser state needs to update after so UserProfile has access to new userDetails\n    const fetchRelevant = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/relevantUser\",\n          {\n            relevantUsername: state.url[0].username,\n          }\n        );\n\n        dispatch({ type: \"SET_RELEVANT_USER\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchRelevant();\n  }\n\n  //event handlers--------\n\n  //handleBio\n  function handleBio(event) {\n    setBio(event.target.value);\n  }\n  //handleBio\n  function handleWebsite(event) {\n    setWebsite(event.target.value);\n  }\n  //handleBio\n  function handleLocation(event) {\n    setLocation(event.target.value);\n  }\n\n  //IMAGE HANDLERS`\n\n  //opens hidden image input using tooltip\n  function handleEditPicture() {\n    const fileInput = document.getElementById(\"imageInput\");\n    fileInput.click();\n  }\n\n  //submit Image change\n  function handleSubmitChange(event) {\n    const image = event.target.files[0];\n\n    const formData = new FormData();\n    formData.append(\"image\", image);\n\n    //upload image\n    const uploadImage = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/upload\",\n          formData\n        );\n\n        dispatch({\n          type: \"SET_RELEVANT_USER_IMAGE\",\n          payload: `https://socialmedia-server.herokuapp.com/img/${\n            state.url[0] && state.url[0].username\n          }`,\n        });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    uploadImage();\n  }\n\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.url[0] && state.url[0].username\n  }? ${Date.now()}`;\n\n  //------------------------\n\n  return (\n    <Container>\n      <Button\n        className={classes.editProfile}\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n        // style={{ marginLeft: \"400px\" }}\n        component=\"span\"\n      >\n        Edit details\n      </Button>\n      <Dialog\n        fullWidth={true}\n        maxWidth={\"sm\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit details</DialogTitle>\n        <DialogContent>\n          <div className=\"image-wrapper\">\n            <Avatar component=\"span\">\n              <img\n                src={profilePic ? profilePic : null}\n                style={{ width: \"150%\", objectFit: \"cover\" }}\n              />\n            </Avatar>{\" \"}\n            <input\n              type=\"file\"\n              name=\"pic\"\n              id=\"imageInput\"\n              hidden=\"hidden\"\n              onChange={handleSubmitChange}\n            />\n            <Tooltip title=\"Edit profile picture\" placement=\"top\">\n              <IconButton\n                onClick={handleEditPicture}\n                className=\"button\"\n                component=\"span\"\n              >\n                <EditIcon color=\"primary\" />\n              </IconButton>\n            </Tooltip>\n          </div>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"bio\"\n            label=\"Bio\"\n            type=\"email\"\n            fullWidth\n            defaultValue={state.loggedUser.bio}\n            style={{ paddingTop: \"20px\" }}\n            onChange={handleBio}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"location\"\n            label=\"Location\"\n            type=\"text\"\n            fullWidth\n            defaultValue={state.loggedUser.location}\n            style={{ paddingTop: \"20px\" }}\n            onChange={handleLocation}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"website\"\n            label=\"Website\"\n            type=\"text\"\n            fullWidth\n            defaultValue={state.loggedUser.website}\n            style={{ paddingTop: \"20px\" }}\n            onChange={handleWebsite}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmitForm} color=\"primary\">\n            save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport { useHistory, Link } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LocationIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport DateIcon from \"@material-ui/icons/DateRangeOutlined\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n//components\nimport { Tweets } from \"./Tweets\";\nimport { EditProfile } from \"./EditProfile\";\nimport { Container } from \"@material-ui/core\";\n\n//------------\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 700,\n  },\n  media: {\n    height: 240,\n    // backgroundSize: \"contain\",\n  },\n});\n\nexport function UserProfile(props) {\n  const classes = useStyles();\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  //local (prevent dom loading until state updated)\n  const [loading, setLoading] = React.useState(false);\n\n  //====================================================\n\n  //sets url data to state so can access match.params in other componenents\n  React.useEffect(() => {\n    //loading\n    setLoading(true);\n\n    dispatch({ type: \"URL_DATA\", payload: props.match.params });\n  }, [props.match.params.username]);\n\n  //relevanttweets\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/relevantTweets\",\n          { relevantUsername: props.match.params.username }\n        );\n        //type = set_tweets to clear the tweets state with users tweets, on tweetdetails type is set_user_tweets\n        dispatch({ type: \"SET_TWEETS\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, [props.match.params.username]);\n\n  //user\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\n          \"https://socialmedia-server.herokuapp.com/user\"\n        );\n        dispatch({ type: \"SET_USER\", payload: result.data });\n        dispatch({\n          type: \"SET_RELATIONSHIPS\",\n          payload: result.data.relationships,\n        });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, [props.match.params.username]);\n\n  //relevantUser- relies on state.url set to be same as user in TweetDetails\n  React.useEffect(() => {\n    //toggle loading state\n    // setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/relevantUser\",\n          {\n            relevantUsername: state.url[0].username,\n          }\n        );\n\n        dispatch({ type: \"SET_RELEVANT_USER\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n\n    fetchData();\n  }, [state.url[0]]);\n\n  //relevantRelationships (gets followers and follow counts)\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/relevantRelationships\",\n          {\n            relevantUser: props.match.params.username,\n          }\n        );\n\n        dispatch({ type: \"SET_RELEVANT_RELATIONSHIPS\", payload: result.data });\n      } catch {\n        console.log(\"something went wrong\");\n      }\n    };\n    setLoading(false);\n\n    fetchData();\n  }, [props.match.params.username]);\n\n  //=================================================================================================\n\n  //editProfile button check-----\n  let editDetailsButton;\n  if (state.loggedUser && state.url[0]) {\n    editDetailsButton =\n      state.loggedUser.username === state.url[0].username ? (\n        <EditProfile />\n      ) : null;\n  }\n\n  //follower and follow check----------\n  let followers;\n  let following;\n  if (state.relevantRelationships[0] && state.url[0]) {\n    followers = state.relevantRelationships.filter(\n      (x) => x.followed_username === state.url[0].username\n    ).length;\n    following = state.relevantRelationships.filter(\n      (x) => x.followed_username !== state.url[0].username\n    ).length;\n  }\n\n  ///---\n  //url for profilepic\n  const profilePic = `https://socialmedia-server.herokuapp.com/img/${\n    state.url[0] && state.url[0].username\n  }? ${Date.now()}`;\n\n  //--------------------------------------\n\n  //markup\n  let markup = (\n    <Card className={classes.root} key={state}>\n      <CardActionArea>\n        <CardMedia\n          key={state}\n          className={classes.media}\n          // image={\"https://socialmedia-server.herokuapp.com/img/bison\"}\n          image={`https://socialmedia-server.herokuapp.com/img/${\n            state.url[0] && state.url[0].username\n          }? ${Date.now()}`}\n          title=\"user img\"\n        />\n        <CardContent>\n          <Container>{editDetailsButton}</Container>\n\n          <Avatar component=\"span\">\n            <img\n              src={profilePic ? profilePic : null}\n              style={{ width: \"150%\", objectFit: \"cover\" }}\n            />\n          </Avatar>\n          {/* <Avatar src={profilePic} /> */}\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {state.relevantUser[0] && state.relevantUser[0].username}\n          </Typography>\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n            {state.relevantUser[0] && state.relevantUser[0].bio}\n          </Typography>\n\n          <IconButton\n            aria-label=\"location\"\n            style={{ paddingLeft: \"0\", marginLeft: \"-5px\" }}\n            component=\"span\"\n          >\n            <LocationIcon />\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ paddingLeft: \"5px\" }}\n            >\n              {state.relevantUser[0] && state.relevantUser[0].location}\n            </Typography>\n          </IconButton>\n          <IconButton aria-label=\"joined\" component=\"span\">\n            <DateIcon />\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ paddingLeft: \"5px\" }}\n            >\n              Joined{\" \"}\n              {state.relevantUser[0] &&\n                dayjs(state.relevantUser[0].created_at).format(\"DD/MM/YYYY\")}\n            </Typography>\n          </IconButton>\n          <br />\n          <Typography\n            variant=\"body1\"\n            color=\"textSecondary\"\n            component=\"p\"\n            style={{ display: \"inline-block\" }}\n          >\n            {followers} {followers > 1 ? \"Followers\" : \"Follower\"}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"textSecondary\"\n            component=\"p\"\n            style={{ display: \"inline-block\", paddingLeft: \"30px\" }}\n          >\n            {following} Following\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n      <Container>{!loading ? <Tweets /> : null}</Container>\n    </Card>\n  );\n\n  return (\n    <div>\n      {\" \"}\n      <Container>\n        <Typography variant=\"h4\" style={{ paddingLeft: \"30px\" }}>\n          {state.relevantUser[0] && state.relevantUser[0].username}\n        </Typography>\n        <Typography style={{ paddingLeft: \"30px\" }}>\n          {state.tweets.length} {state.tweets.length > 1 ? \"tweets\" : \"tweet\"}\n        </Typography>\n      </Container>\n      {!loading ? markup : null}\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  customError: {\n    color: \"red\",\n  },\n}));\n\nexport function Register(props) {\n  const classes = useStyles();\n\n  //local state\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  //errors\n  const [errors, setErrors] = useState({\n    errors: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      general: \"\",\n    },\n  });\n\n  //--contextAPI--------\n  const [state, dispatch] = useContext(UserContext);\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  //axios\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const registerUser = async () => {\n      try {\n        const result = await axios.post(\n          \"https://socialmedia-server.herokuapp.com/register\",\n          {\n            email: email,\n            username: username,\n            password: password,\n            confirmPassword: confirmPassword,\n          }\n        );\n        const token = `Bearer ${result.data}`;\n        localStorage.setItem(\"jwt\", token);\n        //redirects\n        props.history.push(\"/\");\n      } catch (err) {\n        setErrors(err.response.data);\n      }\n    };\n\n    registerUser();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            error={errors.errors.email ? true : false}\n            helperText={errors.errors.email}\n            onChange={handleEmail}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            error={errors.errors.username ? true : false}\n            helperText={errors.errors.username}\n            onChange={handleUsername}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            error={errors.errors.password ? true : false}\n            helperText={errors.errors.password}\n            onChange={handlePassword}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Confirm password\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"Confirm password\"\n            error={errors.errors.confirmPassword ? true : false}\n            helperText={errors.errors.confirmPassword}\n            onChange={handleConfirmPassword}\n          />\n\n          <Grid container>\n            <Grid alignItems=\"center\">\n              {errors.errors.general && (\n                <Typography variant=\"body2\" className={classes.customError}>\n                  {errors.errors.general}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container></Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"../contextAPI/userContext\";\n\n//mui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport ProfileIcon from \"@material-ui/icons/AccountCircleOutlined\";\n\nimport { Box } from \"@material-ui/core\";\n\n//component\nimport { NotificationsButton } from \"./NotificationsButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n    // paddingLeft: \"59px\",\n    marginTop: \"30px\",\n    display: \"flex\",\n    justifyContent: \"center,\",\n    alignItems: \"center\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      // paddingLeft: \"30px\",\n    },\n  },\n}));\n\nexport function NavigationBottom() {\n  //--contextAPI--------\n  const [state] = React.useContext(UserContext);\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <Box display=\"flex\">\n        <Box m=\"auto\">\n          <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <BottomNavigationAction label=\"Home\" icon={<HomeIcon />} />\n          </Link>\n\n          <Link\n            to={`/${state.loggedUser.username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <BottomNavigationAction label=\"Profile\" icon={<ProfileIcon />} />\n          </Link>\n          <BottomNavigationAction\n            style={{ paddingRight: \"30px\" }}\n            label=\"Profile\"\n            icon={<NotificationsButton />}\n          />\n        </Box>\n      </Box>\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n//contextAPI\nimport { UserContext } from \"./contextAPI/userContext\";\n\n//components\nimport { Home } from \"./components/Home\";\nimport { LogIn } from \"./components/Login\";\nimport { TweetDetails } from \"./components/TweetDetails\";\nimport { Navigations } from \"./components/Navigations\";\nimport { UserProfile } from \"./components/UserProfile\";\nimport { SideBar } from \"./components/SideBar\";\nimport { Register } from \"./components/Register\";\nimport { NavigationBottom } from \"./components/NavigationBottom\";\n\n//mui\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//==========================================================\n\nfunction App() {\n  if (localStorage.jwt) {\n    axios.defaults.headers.common[\"Authorization\"] = localStorage.jwt;\n    // window.location.href = \"/\";\n  }\n\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  const [user, setUser] = React.useState(false);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    setUser(true);\n  };\n\n  console.log(state);\n\n  //==styles mui==========================\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      [theme.breakpoints.down(\"sm\")]: {},\n      [theme.breakpoints.down(\"md\")]: {},\n      [theme.breakpoints.up(\"lg\")]: {},\n    },\n  }));\n\n  const classes = useStyles();\n\n  //===================================\n\n  //responsive dewsign notes-- Double grid design, main grid split in 2 with navigation and main section,\n  //navigation has another grid system with 3grids nested to get good alignment (to the right) when shrinking viewport.\n  //navigation.js also has responsive layout to hide text at breakpoint.\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Grid container spacing={3}>\n            <Hidden xsDown>\n              <Grid item xs={false} sm={2} md={2} lg={3}>\n                <Container>\n                  <Grid container>\n                    <Grid item sm={4}></Grid>\n                    <Grid item sm={4}></Grid>\n                    <Grid item sm={4} lg={12} style={{ paddingRight: \"20px\" }}>\n                      <Navigations />\n                    </Grid>\n                  </Grid>\n                </Container>\n              </Grid>\n            </Hidden>\n\n            <Grid item xs={12} sm={10} md={10} lg={9}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={12} md={8} lg={8}>\n                  <Switch>\n                    <ProtectedRoute exact path=\"/\" component={Home} />\n                    <Route exact path=\"/login\" component={LogIn} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <ProtectedRoute\n                      exact\n                      path=\"/:username/:tweetId\"\n                      component={TweetDetails}\n                    />\n                    <ProtectedRoute\n                      exact\n                      path=\"/:username\"\n                      component={UserProfile}\n                    />\n                  </Switch>\n                </Grid>\n\n                <Hidden smDown>\n                  <Grid item sm={false} md={4} lg={4}>\n                    <Route component={SideBar}></Route>\n                  </Grid>\n                </Hidden>\n              </Grid>\n            </Grid>\n            <Hidden smUp>\n              <NavigationBottom />\n            </Hidden>\n          </Grid>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n///protected route function\nfunction ProtectedRoute({ component: Component, user, ...rest }) {\n  //--contextAPI--------\n  const [state, dispatch] = React.useContext(UserContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (localStorage.jwt) {\n          return <Component {...rest} {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n//contextAPI\nimport { UserProvider } from \"./contextAPI/userContext\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}